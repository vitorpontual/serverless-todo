service: todo-serverless

plugins: 
  - serverless-offline
  - serverless-dynamodb-local
  - serverless-webpack

custom:
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  dynamodb:
    stages: 
      - dev
      - local
    start: 
      port: 8000
      inMemory: true
      migrate: true

provider:
  name: aws
  runtime: nodejs14.x
  
functions:
  createUser:
    handler: src/functions/createUser.handle
    events:
      - http:
          path: /users
          method: POST
          cors: true
  createTodo:
    handler: src/functions/createTodo.handle
    events:
      - http:
          path: /todos/{user_id}
          method: POST
          cors: true
  listTodo:
    handler: src/functions/listTodo.handle
    events:
      - http:
          path: /todos/{user_id}
          method: GET
          cors: true
  showTodo:
    handler: src/functions/showTodo.handle
    events:
      - http:
          path: /todos/{user_id}/{todo_id}
          method: GET
          cors: true
      

resources:
  Resources:
    dbUsers:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: users
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
    todos:
      Type: AWS::DynamoDB::Table
      Properties:
        TableName: todos
        ProvisionedThroughput:
          ReadCapacityUnits: 5
          WriteCapacityUnits: 5
        AttributeDefinitions:
          - AttributeName: user_id
            AttributeType: S
          - AttributeName: id
            AttributeType: S
        KeySchema:
          - AttributeName: user_id
            KeyType: HASH
          - AttributeName: id
            KeyType: Range